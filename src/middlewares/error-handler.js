import { HttpError, GrammyError } from "grammy";
import { CustomError } from "../errors/custom-error.js";

export const errorHandler = async (err) => {
  const ctx = err.ctx;
  const e = err.error;

  if (e instanceof GrammyError) {
    console.error("Error in request:", e.description);
  } else if (e instanceof HttpError) {
    console.error("Could not contact Telegram:", e);
  } else {
    console.error("Unknown error:", e);
  }

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
  try {
    // –ï—Å–ª–∏ —ç—Ç–æ callback, —Å–Ω–∞—á–∞–ª–∞ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ –Ω–µ–≥–æ,
    // –∏–Ω–∞—á–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ¬´–∑–∞–≤–∏—Å–Ω–µ—Ç¬ª
    if (ctx.callbackQuery) {
      await ctx.answerCallbackQuery({
        text: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞",
        show_alert: false,
      });
    }

    if (e instanceof CustomError) {
      await ctx.reply(e.message);
      return;
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é –æ—à–∏–±–∫—É
    await ctx.reply(
      "üòî –£–ø—Å! –ß—Ç–æ‚Äë—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
    );
  } catch (sendErr) {
    console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—à–∏–±–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—é:", sendErr);
  }
};
